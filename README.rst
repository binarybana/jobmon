JobMon
######

JobMon is a distributed job manager designed to ease the process of running 
parallel simulations on heterogenous computing infrastructure (groups of 
clusters and workstations). 

Building Blocks
###############

This software would not be possible without the following components:

* Python for the main driving and glue code
* Redis_  for the distributed job management
* rsyslog for remote logging
* ZeroMQ_ for some networking bliss

.. _redis: http://redis.io
.. _zeromq: http://zeromq.org

Redis Schema
############

The Redis schema we are using:

jobs:new,jobs:working
    List: <jobhash>|<paramhash> experiment strings.

jobs:numdone
    Int: The number of done jobs.

jobs:sources
    Hashmap: A hashmap from job hash to gzipped source text.

jobs:descs
    Hashmap: <jobhash> -> Description string

params:sources
    Hashmap: from hashed JSON params to the JSON param string.

jobs:times,experiments:times
    Hashmap: from <jobhash> or <jobhash>|<paramhash> strings to unix epoch 
    times of submission.

experiments:ground
    Hashmap: <jobshash>|<paramhash> strings to the zlib compressed pickle of 
    the ground truth object

jobs:githashes
    Hashmap: jobhash to the githash of the superproject that the job was posted 
    under

workers:hbs
    Sorted Hashmap (heap): heartbeat times to json encoded info about the 
    child.  (See next section)

workers:stop
    A key to indicate that the workers should stop.

Heartbeat Schema
################
 
The heartbeats that the children will send back have yet to be defined, but the 
JSON will probably include:

* unique_id: as generated by the child
* status: text describing current state (working, resting)
* history: time at that state (seconds)
* job: if working, what job? (if resting, then blank)

