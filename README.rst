JobMon
######

JobMon is a distributed job manager designed to ease the process of running 
parallel simulations on heterogenous computing infrastructure (groups of 
clusters and workstations). 

Building Blocks
###############

This software would not be possible without the following components:

* Python for the main driving and glue code
* Redis_  for the distributed job management
* rsyslog for remote logging

.. _redis: http://redis.io

Redis Schema
############

The Redis schema we are using for this is:

jobs:new,jobs:working,
    Lists of job source hashes.

jobs:numdone
    The number of done jobs.

jobs:done:{hash}
    The list containing the completed job results. For sweep jobs the hash will 
    be {hash}-{p} where p was the parameter for that run.

jobs:sources
    A hashmap from job hash to gzipped source text.

jobs:envs
    A hashmap from environment hashes to gzipped JSON environments.

jobs:sweepconfigs
    A hashmap from a job hash to a string of space separated values that the 
    sweep was run with.

workers:hbs
    A sorted hashmap of heartbeat times to json encoded info about the child.  
    (See next section)

workers:stop
    A key to indicate that the workers should stop.

Heartbeat Schema
################
 
The heartbeats that the children will send back have yet to be defined, but the 
JSON will probably include:

* unique_id: as generated by the child
* status: text describing current state (working, resting)
* history: time at that state (seconds)
* job: if working, what job? (if resting, then blank)

